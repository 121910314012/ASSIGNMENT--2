 #product of sparse matrix
Matrix1 = [[1, 0, 0, 0],
                [0, 2, 0, 0],
                [0, 9, 8, 0],
                [0, 0, 4, 4],
                [10, 0, 0, 0]]
normalMatrix2 = [[2, 0, 0, 0],
                [0, 56, 0, 0],
                [0, 2, 32, 0],
                [0, 0, 48, 4],
                [65, 0, 0, 0]]
print(" Matrix1")
for row in Matrix1:
    for element in row:
        print(element, end=" ")
    print()
print(" Matrix2")
for row in Matrix2:
    for element in row:
        print(element, end=" ")
    print()

sparseMatrix=[]
for i in range(len(Matrix1)):
    for j in range(len(Matrix1[0])):
        if Matrix1[i][j] != 0:

            temp = []
            temp.append(i)
            temp.append(j)
            temp.append(Matrix1[i][j])
            sparseMatrix.append(temp)

sparseMatrix2=[]
#SEARCHING FOR VALUES GREATER THAN ZERO
for i in range(len(Matrix1)):
    for j in range(len(Matrix1[0])):
        if Matrix2[i][j] != 0:

            temp = []
            temp.append(i)
            temp.append(j)
            temp.append(Matrix1[i][j])
            sparseMatrix2.append(temp)
#DISPLAYIG SPARSE MATRIX
print("\nSparse Matrix1: ")
for row in sparseMatrix:
    for element in row:
        print(element, end=" ")
    print()
print("\nSparse Matrix2: ")
for row in sparseMatrix2:
    for element in row:
        print(element, end=" ")
    print()
print("Product of sparse matrix")
result = [[0, 0, 0],
          [0, 0, 0],
          [0, 0, 0],
          [0, 0, 0],
          [0, 0, 0],
          [0, 0, 0],
          [0, 0, 0]]
for i in range(len(sparseMatrix)):
    # iterate through columns
    for j in range(len(sparseMatrix[0])):
        result[i][j] = sparseMatrix[i][j] * sparseMatrix2[i][j]
print(result)

OUTPUT:

 Matrix1
1 0 0 0 
0 2 0 0 
0 9 8 0 
0 0 4 4 
10 0 0 0 
 Matrix2
2 0 0 0 
0 56 0 0 
0 2 32 0 
0 0 48 4 
65 0 0 0 

Sparse Matrix1: 
0 0 1 
1 1 2 
2 1 9 
2 2 8 
3 2 4 
3 3 4 
4 0 10 

Sparse Matrix2: 
0 0 1 
1 1 2 
2 1 9 
2 2 8 
3 2 4 
3 3 4 
4 0 10 
Product of sparse matrix
[[0, 0, 1], [1, 1, 4], [4, 1, 81], [4, 4, 64], [9, 4, 16], [9, 9, 16], [16, 0, 100]]
